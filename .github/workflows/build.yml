name: Build and publish docker image
"on":
  push:
    branches:
      - main
jobs:
  checkout:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
  build_deploy:
    runs-on: self-hosted
    needs: [checkout]
    container:
      image: node:16
      env: 
        GOOGLE_APPLICATION_CREDENTIALS: ./recipes-ac036-firebase-adminsdk-1mje6-a903c2c3df.json
    steps:
      # add docker official GPG key
      - run: sudo mkdir -m 0755 -p /etc/apt/keyrings
      - run: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
      - run: echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      # install dependencies
      - run: apt update && apt install -y git-crypt ca-certificates curl gnupg lsb-release docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
      #  config git
      - run: git config --global --add safe.directory /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}
      - run: git config --global user.name nonapproved_user
      - run: git config --global user.email nonapproved@corp.com
      # unlock git-crypt'ed files
      - run: git-crypt init
        continue-on-error: true
      - run: echo "${{ secrets.GIT_CRYPT_KEY }}" | base64 -d > .git/git-crypt/keys/default
      - run: git stash
      - run: git-crypt unlock .git/git-crypt/keys/default
      - run: docker login --username=marnec --password-stdin <<<"${{secrets.GITLAB_PERSONAL_ACCESS_TOKEN}}" registry.gitlab.com
      - run: docker build -t registry.gitlab.com/marnec/${{ github.event.repository.name }} -f ./docker/dockerfile.production .
      - run: docker push registry.gitlab.com/marnec/${{ github.event.repository.name }}
  bruteforce_cleanup:
    runs-on: self-hosted
    needs: [build_deploy]
    steps:
      - run: sudo rm -rf ./*
      - run: sudo rm -rf ./.*
